# -*- coding: utf-8 -*-
"""task5_yash.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1OyuRphuyNFSrWycTCvDCo7FzD5dDQKKK
"""

import numpy as np
from sklearn.neighbors import NearestNeighbors

def generate_random_data(n_points=20, n_dimensions=2):

    return np.random.rand(n_points, n_dimensions) * 10

def calculate_nn_mnn_scores(X, k=3):

    knn = NearestNeighbors(n_neighbors=k+1)
    knn.fit(X)

    _, indices = knn.kneighbors(X)
    neighbor_indices = indices[:, 1:]

    nn_scores = np.zeros(X.shape[0], dtype=int)
    mnn_scores = np.zeros(X.shape[0], dtype=int)

    neighbors_dict = {i: set(neighbor_indices[i]) for i in range(X.shape[0])}

    for i, neighbors in enumerate(neighbor_indices):
        for neighbor in neighbors:
            nn_scores[neighbor] += 1
            if i in neighbors_dict[neighbor]:
                mnn_scores[i] += 1

    return nn_scores, mnn_scores

n_points = 10
k_neighbors = 3

X = generate_random_data(n_points=n_points)

nn_scores, mnn_scores = calculate_nn_mnn_scores(X, k=k_neighbors)

print(f"\nScores for all {n_points} points (k={k_neighbors}):")
for i in range(len(nn_scores)):
    print(f"{i}: NN = {nn_scores[i]}, MNN = {mnn_scores[i]}")

